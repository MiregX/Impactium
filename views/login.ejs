<style>
  .stage img {
    pointer-events: none;
  }
  a {
    text-decoration: none;
  }
  body,
  main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0;
  }
  .base-button {
    height: 52px;
    border: 1px solid var(--c-36);
    padding: 0 15px;
    color: var(--w);
    border-radius: 50px;
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  .base-button p {
    flex: 1;
    text-align: center;
  }
  .base-button img {
    width: 30px;
  }
  .stage {
    background-color: var(--c-16);
    border-radius: 25px;
    min-width: 400px;
    border: 1px solid var(--c-36);
    padding: 20px 20px 15px 20px;
  }
  @media (max-width: 767px) {
    header {
      grid-template-columns: repeat(1, 1fr);
      justify-items: center;
    }
    .stage {
      min-width: 300px;
    }
  }
  .stage.one {
    display: flex;
    gap: 15px;
    flex-direction: column;
    position: relative;
    overflow: hidden;
  }
  .stage.two {
    position: absolute;
    top: 0px;
    left: 0px;
    gap: 15px;
    transform: translateY(100%);
    height: 100%;
    transition: all 0.75s var(--trans);
    border: none;
  }
  .stage.two.active {
    transform: translateY(0%);
  }
  .stage.two .skull {
    width: 40%;
  }
  .stage.two h2 {
    font-size: 38px;
    color: var(--w);
    font-weight: 600;
  }
  .stage.two p {
    color: var(--c-96);
  }
  .stage.two .base-button {
    height: 60px;
  }
  .stage.one h1 {
    width: 100%;
    color: var(--w);
    height: 50px;
    text-align: center;
    font-size: 38px;
  }
  .stage .form {
    margin-top: 5px;
    gap: 15px;
    align-items: center;
  }
  .stage .input-group {
    position: relative;
    display: flex;
  }
  .stage .input-group .icon {
    position: absolute;
    right: 5px;
    height: 100%;
    width: 40px;
    cursor: default;
  }
  .input-group .icon img {
    position: absolute;
    height: 25px;
    filter: invert(100%) brightness(0.8);
    transition: all 0.2s var(--trans);
    opacity: 1;
  }
  .input-group .icon img.disactive {
    opacity: 0;
  }
  .stage .form label {
    position: absolute;
    color: var(--w-1);
    transform: translate(20px, -50%);
    padding: 0 5px;
    background: var(--c-16);
  }
  .stage .form input, .stage button.submit {
    flex: 1;
  }
  .stage button.submit {
    grid-row: 3 / 4;
    height: 100%;
  }
  line {
    height: 1px;
    width: 100%;
    background-color: var(--c-36);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 20px 0;
  }
  .stage.one line::after {
    content: "OR";
    padding: 0 10px;
    position: absolute;
    background: var(--c-16);
    color: var(--w-1);
  }
  .buttons-wrapper {
    gap: 15px;
  }
  .discord-login {
    background: #5865F2;
    border: none;
  }
  .google-login {
    background: var(--w);
    border: none;
  }
  .no-account {
    gap: 5px;
    width: 100%;
    color: var(--c-96);
    text-align: center;
    height: 40px;
  }
  .no-account a {
    color: var(--w);
    font-weight: 600;
    text-decoration: underline;
    cursor: pointer;
  }
  .closeStage {
    height: 60px;
    width: 60px;
    position: absolute;
    top: 0px;
    right: 0px;
    transition: all 0.75s var(--trans) 0.75s;
    transform: translateX(200%);
  }
  .stage.two.active .closeStage {
    transform: translateX(0%);
  }
  .closeStage img {
    height: 20px;
    width: 20px;
    filter: invert(100%);
  }
  </style>
  
  <div id="stageOne" class="stage one">
    <h1 class="center">Login</h1>
    <div class="form grid columns-1 rows-3">
      <div class="input-group">
        <label for="emailOrUsername">Username or email:</label>
        <input type="text" id="emailOrUsername" name="emailOrUsername" class="base-button" placeholder="Some shitty username" required>
        <button class="icon center">
          <img src="/static/images/circle-user.svg"> 
        </button>
      </div>
  
      <div class="input-group">
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" class="base-button" placeholder="Goofy-ass password" required>
        <button class="icon pointer center" onclick="togglePasswordVisibility(this)">
          <img src="/static/images/eye-closed.svg"> 
          <img class='disactive' src="/static/images/eye-open.svg">
        </button>
      </div>
      <button class="submit base-button center" onclick="nextStage()">Log In</button>
    </div>
    <line></line>
    <div class="buttons-wrapper flex flex-dir-column">
      <a href="/oauth2/login/google" class="base-button google-login">
        <img src="https://fonts.gstatic.com/s/i/productlogos/googleg/v6/24px.svg">
        <p style="color: var(--c-16);">Continue with Google</p>
      </a>
      <a href="/oauth2/login/discord" class="base-button discord-login">
        <img src="/static/images/discord-mark-white.svg">
        <p>Continue with Discord</p>
      </a>
    </div>
    <p class="no-account center">Don't have an account? <a onclick="nextStage()">Register</a></p>
    <div id="stageTwo" class="stage two flex flex-dir-column align-center justify-center">
      <img src="/static/images/skull.png" class="skull">
      <h2>Nuh uh...</h2>
      <p>Just use these two:</p>
      <div class="buttons-wrapper flex flex-dir-row">
        <a href="/oauth2/login/google" class="base-button google-login">
          <img src="https://fonts.gstatic.com/s/i/productlogos/googleg/v6/24px.svg">
        </a>
        <a href="/oauth2/login/discord" class="base-button discord-login">
          <img src="/static/images/discord-mark-white.svg">
        </a>
      </div>
      <button class="closeStage center pointer" onclick="previoutStage()">
        <img src="https://api.impactium.fun/ux/close.svg">
      </button>
    </div>
  </div>
  
  <script>
  $('.login-wrapper').remove();
  $('language').remove();
  $('header-background').remove();
  function togglePasswordVisibility(parent) {
    const images = parent.querySelectorAll('img');
    images.forEach(image => {
      const action = image.classList.contains('disactive') ? 'remove' : 'add';
      image.classList[action]('disactive')
    });
  
    const passwordInput = document.getElementById('password');
    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
    } else {
      passwordInput.type = 'password';
    }
  }
  function nextStage() {
    const stageTwo = document.getElementById('stageTwo');
    stageTwo.classList.add('active');
  }
  function previoutStage() {
    const stageTwo = document.getElementById('stageTwo');
    stageTwo.classList.remove('active');
  }
  </script>