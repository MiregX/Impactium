<style>
:root {
  --hammer: url("https://api.impactium.fun/ux/hammer.svg");
  --hammer-accent: #F14C50;
  --casual: url("https://api.impactium.fun/ux/casual.svg");
  --casual-accent: rgb(163, 255, 163);
  --defence: url("https://api.impactium.fun/ux/defence.svg");
  --defence-accent: #417FFD;
  --killer: url("https://api.impactium.fun/ux/killer.svg");
  --killer-accent: #F2DE4C;
  --event: url("https://api.impactium.fun/ux/event.svg");
  --event-accent: #E465FD;
  --donate: url("https://api.impactium.fun/ux/donate.svg");
  --donate-accent: #72E4F2;
}
.panel {
  height: calc(100vh - 80px);
}
.panel.main {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.about-us {
  height: 250px;
  padding: 40px;
  width: 50vw;
  word-break: normal;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}
.about-us .main-text {
  font-size: 42px;
  font-weight: 700;
  /*   АНИМАЦИЯ ПРИ ЗАГРУЗКЕ   */
  transition: all 0.8s cubic-bezier(.21,.29,0,.94) 0.1s !important;
  opacity: 0;
  transform: translateY(-150%);
}
.about-us .support-text {
  color: #9ca3af;
  font-size: 21px;
  text-align: center;
  width: 100%;
  font-weight: 400;
  transition-delay: 0.25s;
  position: absolute;
  transform: translateY(50%);
  opacity: 0;
  transition: all 0.8s cubic-bezier(.21,.29,0,.94) 0.35s !important;
}
.about-us .support-text.active {
  transform: translateY(0);
  opacity: 1;
}
.about-us .support-text.on-move {
  animation: description-animation 0.8s cubic-bezier(.21,.29,0,.94) forwards;
}
@keyframes description-animation {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  33% {
    opacity: 0;
  }
  99.99% {
    transform: translateY(-50%);
    opacity: 0;
  }
  100% {
    transform: translateY(50%);
    opacity: 0;
  }
}
.about-us .descriptions-wrapper {
  position: relative;
  width: 100%;
  height: 66px;
  margin: 12px 0;
  transition: all 0.8s cubic-bezier(.21,.29,0,.94) 0.35s !important;
  opacity: 0;
  transform: translateY(-100px);
}
.panel .right {
  display: flex;
  padding: 1.8em 2.1em;
  gap: 12px;
  width: 45vw;
  border-radius: 32px 0 0 32px;
  backdrop-filter: blur(3px);
  border-right: 0px;
  transition: all 0.8s var(--trans) !important;
  opacity: 0;
  transform: translateX(50%);
  border: 1px solid #36363680;
  border-right: none;
}
.panel .right > h2 {
  font-size: 18px;
}
.panel .right .background-wrapper {
  position: absolute;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  overflow: hidden;
}
.background {
  pointer-events: none;
}
.diamond.background {
  position: absolute;
  top: 50%;
  transform: translate(40%, -40%);
  right: 0;
  z-index: -2;
}
.mireg.background {
  z-index: -1;
  height: 80%;
  transform: translateX(20%);
}
.panel .right a {
  width: 50%;
  text-decoration: none;
  text-align: center;
  padding: 0.7em 2.1em;
  background: #7C1AC2;
  border-radius: 12px;
  z-index: 3;
}
.privileges {
  width: 50%;
}
.privileges li {
  line-height: 1.2;
  margin-bottom: 8px;
}
.privileges li::before {
  display: inline-block;
  transform: translateY(0.3ch);
  margin-right: 1ch;
}
.privileges hr {
  margin-top: 4px;
  height: 4px;
  width: 100%;
  background: var(--c-48);
  border-radius: 2px;
  display: flex;
  border: none;
}
.privileges hr::after {
  content: "";
  transition: all 1s var(--trans);
  min-width: 20px;
  width: 0%;
  border-radius: 2px;
}
.privileges li.width-100 hr::after {
  width: 100%;
}
.privileges li[--hammer]::before { content: var(--hammer) }
.privileges li[--hammer] hr::after { background-color: var(--hammer-accent) }

.privileges li[--casual]::before { content: var(--casual) }
.privileges li[--casual] hr::after { background-color: var(--casual-accent) }

.privileges li[--defence]::before { content: var(--defence) }
.privileges li[--defence] hr::after { background-color: var(--defence-accent) }

.privileges li[--killer]::before { content: var(--killer) }
.privileges li[--killer] hr::after { background-color: var(--killer-accent) }

.privileges li[--event]::before { content: var(--event) }
.privileges li[--event] hr::after { background-color: var(--event-accent) }

.privileges li[--donate]::before { content: var(--donate) }
.privileges li[--donate] hr::after { background-color: var(--donate-accent) }
@media (max-width: 767px) {
  .about-us {
    width: 90vw;
    height: unset;
    margin-top: 2.1em;
    padding: 0;
  }
  .about-us > div {
    width: 100%;
  }
  .about-us .main-text {
    font-size: 26px;
  }
  .about-us .support-text {
    font-size: 22px;
    width: 100%;
  }
  .panel.main {
    flex-direction: column;
    justify-content: space-evenly
  }
  .panel .right {
    overflow: hidden;
    margin-bottom: 5vw;
    width: 90vw;
    border-radius: 32px;
    border-right: 1px solid #36363680;
  }
  .panel .right > h2 {
    font-size: 18px;
    width: 100%;
    text-align: center;
  }
  .panel .right .privileges {
    width: 100%;
  }
  .panel .right a {
    width: 100%;
  }
  .diamond.background {
    display: none;
  }
  .mireg.background {
    filter: blur(5px) brightness(0.5);
    height: auto;
    width: 100%;
    transform: none;
  }
}
</style>

<panel class="panel main">
  <div class="about-us">
    <div class="center flex-dir-column">
      <p class="main-text"><%= lang.joinToUs %></p>
      <div class="descriptions-wrapper flex flex-dir-column align-center">
        <% if (lang.joinToUsDescription.length > 3) { %>
          <% lang.joinToUsDescription.forEach(text => { %>
            <p class="support-text"><%= text %></p>
          <% }) %>
        <% } %>
      </div>
    </div>
  </div>
  <div class="right flex-dir-column">
    <div class="background-wrapper">
      <img class="diamond background" src="https://api.impactium.fun/ui/diamond-full-pattern.svg">
      <img class="mireg background" src="https://api.impactium.fun/ui/mireg_with_shield.png">
    </div>
    <h2><%= lang.playOnOurProject %></h2>
    <ul class="privileges">
      <li --hammer><%= lang.administrationNotIntervenes %><hr></li>
      <li --casual><%= lang.openWorldWithoutPrivates %><hr></li>
      <li --defence><%= lang.sendAthletesAgainstNonRP %><hr></li>
      <li --killer><%= lang.uniqueRewardsSystem %><hr></li>
      <li --event><%= lang.masterpieceRoleplayWithAdmins %><hr></li>
      <li --donate><%= lang.donateAndGetUniqueSkin %><hr></li>
    </ul>
    <a href="https://impactium.fun/me/minecraft">
      <%- user.id ? lang.myProfile : lang.register %>
    </a>
  </div>
</panel>
<script>
  $(window).on('load', function() {
  const header = document.querySelector('header');
  header.style.transform = ('translateY(0px)');
  header.style.opacity = ('1');

  const gl = document.querySelector('.right');
  gl.style.transform = ('translateX(0px)');
  gl.style.opacity = ('1');

  const aboutUsMainText = document.querySelector('.main-text');
  aboutUsMainText.style.transform = ('translateX(0px)');
  aboutUsMainText.style.opacity = ('1');

  const aboutUsDescriptionText = document.querySelector('.descriptions-wrapper');
  aboutUsDescriptionText.style.transform = ('translateX(0px)');
  aboutUsDescriptionText.style.opacity = ('1');

  setTimeout(() => {
  const lis = $('.privileges li');

  lis.each((index, li) => {
    setTimeout(() => {
      $(li).addClass('width-100');
    }, (index + 1) * 250);
  });
}, 800);
});

function redirectPhp() {
  window.location.href = "/php";
}

function redirect(link) {
  window.location.href = link;
}
function redirectMetrix() {
  window.location.href = `/metrix`;
}

function login() {
  window.location.href = "/login";
}

function logout() {
  window.location.href = "/logout";
}

const toggleLanguageChooseButton = document.getElementById('toggleLanguageChooseButton')
function toggleLanguageChoosePanel() {
  const languagePack = document.querySelector('language');
  if (languagePack.classList.contains('active')) {
    languagePack.classList.remove('active');
  } else {
    languagePack.classList.add('active');
  }
}

const descriptionBlocks = $('.descriptions-wrapper .support-text');
let currentIndex = 1;

(function applyStyle() {
  $(descriptionBlocks).removeClass('on-move active'); // Убрать стили у всех блоков

  const currentBlock = descriptionBlocks.eq(currentIndex);
  const prevIndex = (currentIndex === 0) ? descriptionBlocks.length - 1 : currentIndex - 1;
  const prevBlock = descriptionBlocks.eq(prevIndex);

  currentBlock.addClass('active');
  prevBlock.addClass('on-move');

  currentIndex = (currentIndex + 1) % descriptionBlocks.length;

  setTimeout(() => {
    applyStyle()
  }, 5000);
}());
</script>