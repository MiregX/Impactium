version: '3.8'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - 80:80
    depends_on:
      - api
    volumes:
      - ./lib/.nginx:/etc/nginx
    networks:
      - backend

  client:
    container_name: client
    build:
      context: .
      dockerfile: ./client/Dockerfile
      target: production
    restart: always
    environment:
      - PORT=${APP_PORT}
      - DEBUG_PORT=${APP_DEBUG_PORT}
    env_file: .env
    command: npm run start
    networks:
      - backend

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: production
    restart: always
    environment:
      - PORT=${API_PORT}
      - DEBUG_PORT=${API_DEBUG_PORT}
    env_file: .env
    depends_on:
      - api-cockroachdb
    networks:
      - backend

  api-cockroachdb:
    extends:
      file: ./api/libs/api/compose-service.yml
      service: api-cockroachdb
    container_name: api-cockroachdb
    networks:
      - backend
    profiles:
      - development

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    networks:
      - backend
    profiles:
      - development

networks:
  backend:
    driver: bridge
