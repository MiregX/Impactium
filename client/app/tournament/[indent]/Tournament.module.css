.page {
  align-items: flex-start !important;
  display: grid !important;
  grid-template-columns: repeat(3, 1fr) !important;
  grid-template-rows: repeat(6, 1fr) !important;
  justify-content: flex-start !important;
  flex-direction: row !important;
  max-height: var(--content-height);
  overflow: hidden;
}
.heading {
  grid-column: 1 / 3;
}
.grid_wrapper {
  height: 100%;
  grid-row: 2 / 7;
  grid-column: 1 / 3;
  display: flex;
  flex-direction: column;
  gap: 16px;
}
.grid {
  overflow: scroll;
  height: calc(100% - 48px);
}
.grid > div {
  gap: 48px;
  padding-top: 48px;
  flex-direction: row;
  height: max-content;
}
.grid .iteration {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 16px;
  justify-content: space-around;
  position: relative;
}
.grid .iteration:last-child {
  padding-right: 48px;
}
.grid .connector {
  position: absolute;
  height: 100% !important;
  width: 48px !important;
  right: 0;
  transform: translate(100%, 0%);
}
.grid .unit {
  max-width: 256px;
  padding: 12px;
  width: 256px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  border: var(--geist-border);
  border-radius: var(--border-m);
}
.grid_wrapper .header {
  display: flex;
  flex-direction: row;
  gap: 8px;
  align-items: center;
}
.grid_wrapper .header h3 {
  flex: 1;
}
.grid_wrapper .header .settings {
}
.top {
  justify-content: flex-start !important;
}
.center {
  justify-content: center !important;
}
.grid .unit:not([data-round="false"])::before {
  content: attr(data-round);
  position: absolute;
  top: 0;
  left: 0;
  transform: translateY(calc(-100% - 12px));
}
.information {
  grid-column: 3 / 4;
  grid-row: 1 / 6;
  height: 100%;
}
.information > div {
  overflow: hidden;
}
.information .members {
  display: flex;
  flex-direction: column;
  gap: 8px;
  max-height: 100%;
  overflow: scroll;
}
.general {
  grid-column: 3 / 4;
  grid-row: 6 / 7;
  height: 100%;
}
.general .group {
  display: flex;
  gap: 16px;
}
.general .group button {
  flex: 1;
}