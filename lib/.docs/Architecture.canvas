{
	"nodes":[
		{"id":"dd81e508e510c54e","type":"group","x":-2040,"y":120,"width":1460,"height":1580,"label":"CORE"},
		{"id":"d9d7581c8baed02c","type":"group","x":-1440,"y":180,"width":842,"height":980,"color":"#002aff","label":"CLIENT"},
		{"id":"fd7ea865c9788f10","type":"group","x":-2040,"y":-1360,"width":1082,"height":632,"color":"#e8e8e8","label":"Combination & Skeleton Logic"},
		{"id":"5def1f6b3a8e2aa8","type":"group","x":1160,"y":-555,"width":922,"height":480,"color":"5","label":"GO Analytics"},
		{"id":"27bd14f57ef8116b","type":"group","x":-2040,"y":-587,"width":860,"height":456,"color":"#525252","label":"Invites Feature"},
		{"id":"4d5b223d16cfc55e","type":"group","x":-2000,"y":180,"width":540,"height":680,"color":"1","label":"API"},
		{"id":"187dd47f61029330","type":"group","x":320,"y":-980,"width":740,"height":380,"color":"3","label":"Grid Feature"},
		{"id":"84a8de44a6630806","type":"group","x":-1420,"y":-1320,"width":438,"height":572,"label":"<Card />"},
		{"id":"54ac37b5abace7cf","type":"group","x":-1360,"y":-1797,"width":468,"height":300,"label":"Покупка"},
		{"id":"429c48973b33b391","type":"group","x":-440,"y":-560,"width":640,"height":201,"color":"4","label":"Pages"},
		{"id":"a79d1b0a0d4ce852","type":"group","x":460,"y":-400,"width":290,"height":250,"color":"6","label":"Streaming Feature"},
		{"id":"8f5c090e5132f308","type":"group","x":-680,"y":-1681,"width":320,"height":184,"label":"Обслуживание"},
		{"id":"c859fa60258ea203","type":"text","text":"Закончить /tournament/[indent]","x":-120,"y":-439,"width":300,"height":60,"color":"#303030"},
		{"id":"93a9de42ed614e57","type":"text","text":"Сражение которое стримят должно быть подсвечено","x":480,"y":-380,"width":250,"height":100},
		{"id":"2243cba049bb065b","type":"text","text":"Кнопка фокуса <Grid /> на Streaming","x":480,"y":-240,"width":250,"height":60},
		{"id":"b045f086f547f07c","type":"text","text":"Рассылать завлекающие письма для увеличения engagement`а","x":320,"y":280,"width":250,"height":100,"color":"#303030"},
		{"id":"7139e2aae01f2a49","type":"text","text":"Привязать Cryptomus","x":-259,"y":420,"width":250,"height":60,"color":"#303030"},
		{"id":"ef253ab5f8880360","type":"text","text":"Настроить EMAILS","x":-259,"y":180,"width":213,"height":60,"color":"#303030"},
		{"id":"1fb29df9b741a1fb","type":"text","text":"Привлечь игроков и организации","x":80,"y":0,"width":320,"height":60,"color":"#303030"},
		{"id":"f887276032e5cdc6","type":"text","text":"Доработать Impactium","x":-259,"y":-95,"width":250,"height":60,"color":"#303030"},
		{"id":"b4cfbc3070bd667a","type":"text","text":"Страница /team/[indent]/join\n","x":-620,"y":-240,"width":277,"height":60,"color":"2"},
		{"id":"75da8e81f9b7f089","type":"text","text":"Монетизировать","x":0,"y":560,"width":194,"height":60,"color":"#303030"},
		{"id":"e5e0781871be4d31","type":"text","text":"<img src=\"https://cdn.impactium.fun/logo/impactium.svg\" alt=\"Impactium\" width=\"62\" />","x":-226,"y":760,"width":113,"height":105,"color":"#e8e8e8"},
		{"id":"3a3a2e74cf30a613","type":"text","text":"**Строгая разбивка по часам**\n\nМежду боями должна быть разница минимум 1 час","x":1180,"y":-535,"width":280,"height":180},
		{"id":"874236c5bea94d81","type":"text","text":"После матча зафетчить последний матч всех аболтусов у которых привязан *Steam*","x":1180,"y":-235,"width":250,"height":140,"color":"5"},
		{"id":"89b1e55b072d0c42","type":"text","text":"1. `Battle.is_radiant_win [boolean]`\n2. `Battle.radiant [team.indent]`","x":1491,"y":-485,"width":395,"height":80},
		{"id":"ce15b5dec23325d2","type":"text","text":"Найти первый общий матч который совпадает для обоих аболтусов с разных комманд","x":1491,"y":-230,"width":250,"height":130},
		{"id":"f15efb62f40f3ad1","type":"text","text":"**Вернуть ответ на API**\n1. Записать в *CockroachDB*\n2. Записать в *Redis*\n3. Передать новый обьект через *WebSocket*","x":1762,"y":-275,"width":301,"height":180},
		{"id":"580b5dffd16b4974","type":"text","text":"#### **Identifier**\n\n#### Критерии:\n1. Идентификатор не содержит двух или более подряд идущих дефисов (-) или подчеркиваний (_).\n2. Идентификатор состоит из строчных и прописных букв, цифр, дефисов и подчеркиваний.\n3. Идентификатор должен начинаться с буквы или цифры.\n4. Длина идентификатора должна быть от 3 до 32 символов включительно.\n5. Идентификатор должен заканчиваться буквой или цифрой.\n#### Примеры*\n1. User: `@username`\n2. Team: `@indent`\n3. Tournament: `@code`","x":1100,"y":840,"width":523,"height":532,"color":"#333333"},
		{"id":"a6cc3e387f7d5e37","type":"text","text":"## **@impactium/pattern**\n\n#### `λError` - связующий паттерн для ошибок.\n\n#### `λCookies` - связующий паттерн для cookie.\n\n#### `λIteration` - Убывающий логарифм","x":480,"y":840,"width":513,"height":203,"color":"#a1a1a1"},
		{"id":"0f7cb380b5921e86","type":"text","text":"Закончить /developers","x":-420,"y":-540,"width":250,"height":60,"color":"#303030"},
		{"id":"d8d9f1dda6ee8b44","type":"text","text":"Закончить /tournaments","x":-120,"y":-540,"width":300,"height":60,"color":"#303030"},
		{"id":"5860d087f338036f","type":"text","text":"**Prisma.Battle**\n```prisma\nmodel Battle {\n  id            String\n  iteration     Iteration \n  iid           String\n  slot1         String\n  slot2         String?\n  winner        String?\n  games         Game[]\n  createdAt     DateTime\n}\n```","x":720,"y":-960,"width":320,"height":330},
		{"id":"d367cf0927fa6d0a","type":"text","text":"**Prisma.Iteration**\n```prisma\nmodel Iteration {\n  id            String\n  tournament    Tournament\n  tid           String\n  n             Int\n  bracketType   BracketType\n  battles       Battle[]\n}\n```","x":340,"y":-960,"width":340,"height":330},
		{"id":"2026bddbaeef8e49","type":"text","text":"##### Приглашения\nQRCode генерим картинку на клиенте, и в query подставляем lang таргетного юзера, потому что с 80% вероятностью участники говорят на одном языке, или по крайней мере поймут написанное.","x":-2029,"y":-567,"width":395,"height":208},
		{"id":"8c711bc26e8c1efa","type":"text","text":"##### **Joinment.Close**\n\nПредлагаем открыть тиму","x":-2029,"y":-333,"width":218,"height":182,"color":"1"},
		{"id":"523b35b010aeeb87","type":"text","text":"Закончить /team/[indent]","x":-420,"y":-440,"width":250,"height":60,"color":"#303030"},
		{"id":"fc9bb7583a51a027","type":"text","text":"#### **Снипеты**\n\n1. **ll** - `const [loading, setLoading] = useState<boolean>(false);`\n\n2. **vv** - `const [valid, setValid] = useState<boolean>(true);` \n\t1. Используется для `<Input />` c `@/ui/Input`\n\n3. **la** - `const { lang } = useLanguage();`","x":-1440,"y":1180,"width":842,"height":184,"color":"6"},
		{"id":"f6ce0cadb72b43b8","type":"text","text":"#### **Linking**\n\n  \n\nРепозиторий организован в папки `client`, `lib` и `api`, содержащие разные библиотеки, но которые имеют идейную связь между собой через использование ссылок в виде:\n\n```js\n\nimport { Configuration } from '@impactium/config';\nimport { User } from '@api/main/user/user.entity';\n\n```\n\n","x":-1440,"y":1380,"width":842,"height":291,"color":"#a732a9"},
		{"id":"c84d94a25181dd6f","type":"text","text":"## **CLIENT**\n\nКлиентская часть написана на фреймворке `NEXT` и использует [`/app`](https://nextjs.org/docs/app) роутинг а также встроенный функционал фреймворка для облегчения разработки и поддержания кода. Использует ссылки на другие части приложения как это было описанно выше. Во время разработки должна соблюдаться айдентика и кодстайл проекта, а также чистота и читабельность кода.\n\n- **/app:** Роутинг и server-side рендеринг, где каждая папка отвечает за свой path в ссылке запроса. Подробнее читайте в [@next/routing](https://nextjs.org/docs/app/building-your-application/routing).\n\n- **/components:** Редкоиспользуемые компоненты которые можно инплементировать в любой части приложения если позволяет абстракция, или контекстные компоненты с усконаправленным функционалом.\n\n- **/context:** Здесь лежат оболочки приложения для облегчения доступа к переменным или контексту. Подробнее читай в [@react/useContext](https://react.dev/reference/react/useContext).\n\n- **/dto:** Проходник между `API` и `CLIENT`. Здесь находяться удобные в использовании запросы которые можно вызывать одной функцией/методом.\n\n- **/pubic:** Публичные файлы, доступ к которым может получить клиент, а также locale файл для локализации\n\n- **/styles:** Модульные стили\n\n- **/ui:** Реиспользуемые и пиздатые компоненты которые используются повсеместно и нужны для поддержания чистоты кода и общей айдентики проекта\n\n  \n\nПапка `/app` является родительской для всех других, а это значит что папки в папках должны копировать путь страницы, для которой они изначально создавались. Исключением является `/ui` и компоненты которые нужны в абстракции повыше.\n\n  \n\nКомпоненты должны иметь скуффикс Component. Например компонент юзера который находиться в Header должен иметь название `UserComponent`, потому что в инном случае в коде будуть набиратся неразберихи. Игнорировать это правило разрешается в случае если это уникальный компонент который семантически имеет одноимённый смысл и не имеет именных конфликтов с другими типами приложения.\n\n  \n\nИспользуем только модульные стили. Тоесть:\n\n```js\n\nimport s from './Something.module.css'\n\n```","x":-1420,"y":200,"width":802,"height":947,"color":"#5c6fff"},
		{"id":"0ccef2d42d6511cf","type":"text","text":"##### **Joinment.Invites**\nПросто генерим private ссылку с использованием сервера, после чего при сканировании ссылки микрочелика перекидывает на /team/:indent/join/code и говорим ему что мол туда сюда, регайся, и при регестрации сразу добавляем его в тиму.","x":-1800,"y":-333,"width":600,"height":182,"color":"3"},
		{"id":"19097a4c6b520485","type":"text","text":"##### **Joinment.Open**\nПросто генерим статик ссылку без использования сервера, после чего при сканировании ссылки микрочелика перекидывает на `/team/:indent/join` и говорим ему что мол туда сюда, регайся, присоединяйся.","x":-1634,"y":-567,"width":435,"height":208,"color":"4"},
		{"id":"ad59340b6640105d","type":"text","text":"Добавить возможность изменять Team.Joinable","x":-1111,"y":-404,"width":252,"height":90,"color":"4"},
		{"id":"a53b774f7d84881e","type":"text","text":"Логика присоединения участников и проверка на API","x":-780,"y":-408,"width":250,"height":99,"color":"4"},
		{"id":"f1ee9292c5f68890","type":"text","text":"## **API**\n\nПриложение в **edge** архитектуре, развёрнут на серверах **Aeza**.\n\nКонтроллер, сервис, и модуль запихиваем в рутовую папку функционала, аддоны (дто-шки, интерфейсы, декораторы, и прочую хуйню) запиздячиваем в папку `/addon`","x":-1980,"y":200,"width":500,"height":253,"color":"1"},
		{"id":"35384d748be35570","type":"text","text":"#### **Prisma.EntityDefaultArgs**\n\nИспользуется для типизации метода `Entity.select()`.\n1. В основании используется как:\n\t`...select()`\n2. В графе используется как:\n\t`{ entity: options.Entity && ...select() }`\n3. Дополнительные параметры обозначаются как:\n\t`...(options.something && this.method())`\n4. Опции для селекции типизируются как:\n\t`EntitySelectOptions`.","x":-1980,"y":480,"width":500,"height":362,"color":"#9c5e5e"},
		{"id":"256109d1fc1fc6cd","type":"text","text":"#### **api.tsx**\n\n1. *@param `setLoading?: SetState<boolean>`* - используется для стейта загрузки. Вызывается `ll`.\n2. *@param `toast?: boolean | keyof Locale<Success>`* -  используется для уведомления.\n\t1. Если true: Вызовет `<Toast />` если ошибка, и не вызовет если успех\n\t2. Если string: Вызовет `<Toast />` если ошибка, и вызовет переданое сообщение об успехе\n\t`@default(false)`\n3. Все CRUD операции связанные с контекстом (`team` или `tournament`) должны находится в контексте.","x":-2000,"y":1180,"width":540,"height":491,"color":"5"},
		{"id":"db3a66db3f9d887a","type":"text","text":"#### **Использование λ**\n\n1. Когда есть `ui` элемент и `dto` с таким же названием --->  Для `dto` подставляем **λ**.\n2. Когда нужно заредекларировать неймспейс, но `ts` ругается. Например `λthrow`.\n3. Для ахуенно хрупкого и ахуенно важного функционала. Например выделить админский `Bearer` в логах или класс парсинга `api`","x":-2000,"y":876,"width":540,"height":284,"color":"2"},
		{"id":"9a4d103c5c8db516","type":"text","text":"Разработать дизайн самостоятельно","x":-590,"y":-910,"width":369,"height":62,"color":"#303030"},
		{"id":"8a3589c547df55d9","type":"text","text":"**`<EntityCombination />`**\n\n![[UserCombination.png]]","x":-2019,"y":-1181,"width":260,"height":118},
		{"id":"daf9d7e83e436a34","type":"text","text":"**`<Skeleton />`**","x":-1978,"y":-990,"width":179,"height":60,"color":"#e8e8e8"},
		{"id":"8d739163c2db57e5","type":"text","text":"CombinationSkeleton","x":-1759,"y":-876,"width":217,"height":54,"color":"#e8e8e8"},
		{"id":"cadd1d6ccd1fa758","type":"text","text":"**`<EntityUnit />`**\n\n![[EntityUnit.png]]","x":-1399,"y":-1207,"width":398,"height":170},
		{"id":"377fef8f2ca5b0b2","type":"text","text":"**`<Combination />`**\n\n![[images/combination.png]]","x":-1700,"y":-1187,"width":260,"height":130},
		{"id":"0c2f1a5ed849825a","type":"text","text":"**`<Skeleton />`**","x":-1290,"y":-1012,"width":179,"height":60,"color":"#e8e8e8"},
		{"id":"49844138ac3e811a","type":"text","text":"**`<Skeleton />`**","x":-1700,"y":-990,"width":179,"height":60,"color":"#e8e8e8"},
		{"id":"413efd6348e8f2e1","type":"text","text":"EntityUnitSkeleton\n![[EntityUnitSkeleton.png]]\n","x":-1400,"y":-930,"width":398,"height":162,"color":"#e8e8e8"},
		{"id":"cf919cc78649d6fe","type":"text","text":"**`<Card />`**","x":-1270,"y":-1300,"width":140,"height":60},
		{"id":"fd5af2b810dac6af","type":"text","text":"Ос","x":-630,"y":-1661,"width":250,"height":60},
		{"id":"c0ee2f427b6e4588","type":"text","text":"📦 **Холодос**        [150]","x":-1340,"y":-1717,"width":250,"height":60},
		{"id":"1b7fd945b9c245bc","type":"text","text":"🛰️ **Starlink**      [350]","x":-1340,"y":-1777,"width":250,"height":60},
		{"id":"8db2a0b6c5d6c26e","x":233,"y":1255,"width":760,"height":832,"color":"#ff007b","type":"text","text":"#### **Защита полей с унитарным типом**\n```ts\nnamespace λParam {\n  const Code = Symbol('Code');\n  export type Code = string & { readonly [Code]: unique symbol };\n  \n  const Identifier = Symbol('Identifier');\n  export type Identifier = string & { readonly [Identifier]: unique symbol };\n}\n  \ninterface UserObjectConstructor {\n  name: string,\n  age: number,\n  uid: string,\n}\n\nclass UserObject {\n  name: string;\n  age: number;\n  uid: λParam.Code;\n  constructor(user: UserObjectConstructor) {\n    this.name = user.name;\n    this.age = user.age;\n    this.uid = UserObject.transform(user.uid)\n  }\n  public static verify = (uid: λParam.Code): boolean => typeof uid === 'string';\n  public static transform = (uid: string): λParam.Code => uid as λParam.Code;\n}\n  \nconst obj = new UserObject({\n  name: 'John',\n  age: 24,\n  uid: 'some-unique-user-id'\n});\n  \nUserObject.verify(obj.uid);\n```"}
	],
	"edges":[
		{"id":"9e014c08946f01e5","fromNode":"f887276032e5cdc6","fromSide":"bottom","toNode":"1fb29df9b741a1fb","toSide":"top"},
		{"id":"98747e738312642f","fromNode":"1fb29df9b741a1fb","fromSide":"bottom","toNode":"ef253ab5f8880360","toSide":"top"},
		{"id":"066d9ace6e5d7a90","fromNode":"ef253ab5f8880360","fromSide":"bottom","toNode":"b045f086f547f07c","toSide":"top"},
		{"id":"f6f1426e698d7509","fromNode":"b045f086f547f07c","fromSide":"bottom","toNode":"7139e2aae01f2a49","toSide":"top"},
		{"id":"4b3872310b11df3c","fromNode":"7139e2aae01f2a49","fromSide":"bottom","toNode":"75da8e81f9b7f089","toSide":"top"},
		{"id":"ef21c973f1974821","fromNode":"c859fa60258ea203","fromSide":"bottom","toNode":"f887276032e5cdc6","toSide":"top"},
		{"id":"d0b18ba534aa017e","fromNode":"9a4d103c5c8db516","fromSide":"bottom","toNode":"0f7cb380b5921e86","toSide":"top"},
		{"id":"8c799a49bc1ca62f","fromNode":"9a4d103c5c8db516","fromSide":"bottom","toNode":"d8d9f1dda6ee8b44","toSide":"top"},
		{"id":"1de025c1551e3120","fromNode":"ad59340b6640105d","fromSide":"right","toNode":"a53b774f7d84881e","toSide":"left","color":"4","label":"✅"},
		{"id":"55b37f76b99172ae","fromNode":"a53b774f7d84881e","fromSide":"right","toNode":"523b35b010aeeb87","toSide":"left","color":"4","label":"✅"},
		{"id":"1f278a6ef599c2b9","fromNode":"523b35b010aeeb87","fromSide":"bottom","toNode":"b4cfbc3070bd667a","toSide":"top","color":"4","label":"✅"},
		{"id":"b032f233e51c942e","fromNode":"b4cfbc3070bd667a","fromSide":"right","toNode":"f887276032e5cdc6","toSide":"left"},
		{"id":"68044629b5be9e96","fromNode":"187dd47f61029330","fromSide":"left","toNode":"c859fa60258ea203","toSide":"right","color":"3","label":"🟡"},
		{"id":"b88e1c481abadf32","fromNode":"54ac37b5abace7cf","fromSide":"right","toNode":"8f5c090e5132f308","toSide":"left"},
		{"id":"b639cbc01ff1a48d","fromNode":"93a9de42ed614e57","fromSide":"bottom","toNode":"2243cba049bb065b","toSide":"top"},
		{"id":"2fa85b83fc68d148","fromNode":"3a3a2e74cf30a613","fromSide":"bottom","toNode":"874236c5bea94d81","toSide":"top","label":"rGPCout"},
		{"id":"37e85d0f8b3fcfc4","fromNode":"874236c5bea94d81","fromSide":"right","toNode":"ce15b5dec23325d2","toSide":"left"},
		{"id":"50dea364a2f481ee","fromNode":"ce15b5dec23325d2","fromSide":"top","toNode":"89b1e55b072d0c42","toSide":"bottom"},
		{"id":"2c8d9af55178a145","fromNode":"89b1e55b072d0c42","fromSide":"right","toNode":"f15efb62f40f3ad1","toSide":"top","label":"gRPCin"},
		{"id":"1ca2fd9afea4eae5","fromNode":"5def1f6b3a8e2aa8","fromSide":"top","toNode":"187dd47f61029330","toSide":"right","color":"5"},
		{"id":"e6c566d87f14c404","fromNode":"a79d1b0a0d4ce852","fromSide":"left","toNode":"c859fa60258ea203","toSide":"right","color":"6"},
		{"id":"4203b25d3235eadc","fromNode":"377fef8f2ca5b0b2","fromSide":"bottom","toNode":"8d739163c2db57e5","toSide":"top"},
		{"id":"dbc9dfcb6131cc46","fromNode":"8a3589c547df55d9","fromSide":"bottom","toNode":"8d739163c2db57e5","toSide":"left"},
		{"id":"17d2fa399fb89eb1","fromNode":"377fef8f2ca5b0b2","fromSide":"right","toNode":"cadd1d6ccd1fa758","toSide":"left"},
		{"id":"157f4295431064ec","fromNode":"cf919cc78649d6fe","fromSide":"bottom","toNode":"cadd1d6ccd1fa758","toSide":"top"},
		{"id":"eb2c6608bb4dab31","fromNode":"cadd1d6ccd1fa758","fromSide":"bottom","toNode":"413efd6348e8f2e1","toSide":"top"},
		{"id":"73255846a7cab73f","fromNode":"8d739163c2db57e5","fromSide":"right","toNode":"413efd6348e8f2e1","toSide":"left"},
		{"id":"a184a9e9841289b8","fromNode":"377fef8f2ca5b0b2","fromSide":"left","toNode":"8a3589c547df55d9","toSide":"right"},
		{"id":"6782b48dc79a4981","fromNode":"75da8e81f9b7f089","fromSide":"bottom","toNode":"e5e0781871be4d31","toSide":"top"},
		{"id":"9013707e3f09f09d","fromNode":"fd7ea865c9788f10","fromSide":"right","toNode":"9a4d103c5c8db516","toSide":"top"},
		{"id":"a0e3e2cb5802f80e","fromNode":"27bd14f57ef8116b","fromSide":"right","toNode":"ad59340b6640105d","toSide":"left","color":"4","label":"✅"},
		{"id":"aa19ed6d6eb50c8a","fromNode":"d367cf0927fa6d0a","fromSide":"right","toNode":"5860d087f338036f","toSide":"left"},
		{"id":"1918586ea1dc6e32","fromNode":"5860d087f338036f","fromSide":"bottom","toNode":"3a3a2e74cf30a613","toSide":"left"},
		{"id":"9adc1d0bd7c039d5","fromNode":"a6cc3e387f7d5e37","fromSide":"left","toNode":"e5e0781871be4d31","toSide":"right"},
		{"id":"d37579e84fb7c4ee","fromNode":"580b5dffd16b4974","fromSide":"left","toNode":"a6cc3e387f7d5e37","toSide":"right"},
		{"id":"7e6458858a604b32","fromNode":"d8d9f1dda6ee8b44","fromSide":"bottom","toNode":"c859fa60258ea203","toSide":"top"},
		{"id":"20c9736c7fc74791","fromNode":"0f7cb380b5921e86","fromSide":"bottom","toNode":"523b35b010aeeb87","toSide":"top"},
		{"id":"9199596b6efb05d6","fromNode":"35384d748be35570","fromSide":"top","toNode":"f1ee9292c5f68890","toSide":"bottom"},
		{"id":"b3a8b1841dbd5c06","fromNode":"dd81e508e510c54e","fromSide":"right","toNode":"e5e0781871be4d31","toSide":"left"},
		{"id":"56df1c28846870d5","fromNode":"8db2a0b6c5d6c26e","fromSide":"top","toNode":"a6cc3e387f7d5e37","toSide":"bottom"}
	]
}